output header {{

}};

let {{
    header_output = ''
    exec_output = ''
    decoders = { 'Generic': {} }

    def emitUveSBranchInsts(variant):
        global header_output, exec_output, decoders

        SBranchIop = InstObjParams('so.b.'+variant.lower(),
            'UveSBranch' + variant,
            'UveBaseStreamBranch',
            {
                'uve_code': '''
                if(!Vs1_ub.is_last()){
                    NPC = PC + (int64_t)imm;
                    DPRINTF(JMDEVEL, "Branch:T  ");
                }
                else {
                    NPC = NPC;
                    DPRINTF(JMDEVEL, "Branch:F  ");
                }
                ''',
             'op_class': 'UveBranchOp'},
            ['IsDirectControl', 'IsCondControl', 'IsStreamBranch'])


        header_output += UveSBranchDeclare.subst(SBranchIop)

        exec_output += (
            UveSBranchExecute.subst(SBranchIop)
        )

    emitUveSBranchInsts("NC")

}};